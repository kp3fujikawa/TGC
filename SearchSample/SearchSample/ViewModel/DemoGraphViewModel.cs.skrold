using MRILossTool.DataModel;
using MRILossTool.Model;
using MRILossTool.View;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MRILossTool.ViewModel
{
    /// <summary>
    /// グラフ表示ツール ViewModel
    /// </summary>
    class DemoGraphViewModel
    {
        #region "DBアクセスモデル"

        private CompanyMasterAccess acCompamyMaster = new CompanyMasterAccess();
        private FactoryMasterAccess acFactoryMaster = new FactoryMasterAccess();
        private TargetTableAccess acTargetTable = new TargetTableAccess();

        #endregion

        #region "定数"

        #endregion

        #region "変数"
        /// <summary>
        /// DBデータ
        /// </summary>
        private DataTable dtMain = new DataTable();
        public DataTable DtMain { get => dtMain; set => dtMain = value; }

        public DataTable GetDtMain()
        {
            return dtMain;
        }

        // 対象リスト画面
        private TargetData frmTargetData = new TargetData();
        public TargetData FrmTargetData { get => frmTargetData; set => frmTargetData = value; }
        /// <summary>
        /// 対象リスト画面を閉じる
        /// </summary>
        public void FrmTargetDataClose()
        {
            if (frmTargetData != null)
            {
                // グラフ画面終了フラグをONにする
                frmTargetData.IsGraphAppClosing = true;
                // 対象リスト画面を閉じる
                frmTargetData.Close();
                frmTargetData = null;
            }
        }

        /// <summary>
        /// 会社マスタ コンボボックス
        /// </summary>
        private DataSetMaster.M_COMPANYDataTable customerDT = new DataSetMaster.M_COMPANYDataTable();
        public DataSetMaster.M_COMPANYDataTable CustomerDT { get => customerDT; set => customerDT = value; }

        /// <summary>
        /// 工場マスタ コンボボックス
        /// </summary>
        private DataSetMaster.M_FACTORYDataTable factoryDT = new DataSetMaster.M_FACTORYDataTable();
        public DataSetMaster.M_FACTORYDataTable FactoryDT { get => factoryDT; set => factoryDT = value; }

        /// <summary>
        /// ラインマスタ コンボボックス
        /// </summary>
        private DataTable lineDT = new DataTable();
        public DataTable LineDT { get => lineDT; set => lineDT = value; }

        /// <summary>
        /// 対象テーブル コンボボックス
        /// </summary>
        private DataTable targetTableDT = new DataTable();
        public DataTable TargetTableDT { get => targetTableDT; set => targetTableDT = value; }

        #endregion

        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DemoGraphViewModel()
        {
            try
            {
                // 会社マスタ読み込み
                if (!GetCustomerMasterData())
                {
                    return;
                }

                // 対象テーブル
                targetTableDT.Columns.Add("CUST_CD");
                targetTableDT.Columns.Add("KOJOCD");
                targetTableDT.Columns.Add("TABLE_N");
                targetTableDT.Columns.Add("TABLE_NAME");

                // 工場マスタ読み込み
                if (!GetFactoryMasterData())
                {
                    return;
                }
            }
            catch (Exception ex)
            {
                return;
            }
        }

        /// <summary>
        /// デストラクター
        /// </summary>
        ~DemoGraphViewModel()
        {

        }

        #region DB処理
        /// <summary>
        /// 会社マスタの読み込み
        /// </summary>
        /// <returns>true/false</returns>
        private bool GetCustomerMasterData()
        {
            bool ret = true;

            try
            {
                // 会社マスタをロード
                if (!acCompamyMaster.GetCustomerMasterData(ref customerDT))
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                ret = false;
            }
            finally
            {

            }

            return ret;
        }

        /// <summary>
        /// 工場マスタの読み込み
        /// </summary>
        /// <returns>true/false</returns>
        private bool GetFactoryMasterData()
        {
            bool ret = true;

            // マスタをロード
            DataSetMaster.M_FACTORYDataTable dtAllFactory = new DataSetMaster.M_FACTORYDataTable();

            try
            {
                if (!acFactoryMaster.GetFactoryMasterData(ref factoryDT, ref targetTableDT, ref dtAllFactory))
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                ret = false;
            }
            finally
            {

            }

            return ret;
        }

        /// <summary>
        /// 内部保持データの読み込み
        /// </summary>
        /// <param name="strCompany">会社コード</param>
        /// <param name="strFactory">工場コード</param>
        /// <param name="table_name">テーブル名</param>
        /// <returns>true/false</returns>
        public bool GetLocalDBData(
            string strCompany,
            string strFactory,
            String table_name
            )
        {
            bool ret = true;

            // TMP_DB_FIXをロードする
            ret = acTargetTable.GetLocalDBData(
                strCompany,
                strFactory,
                table_name,
                ref dtMain
                );
            if (ret == false) return ret;

            // チェックボックスを追加
            try
            {
                DataColumn chkcol = new DataColumn("選択", Type.GetType("System.Boolean"));
                dtMain.Columns.Add(chkcol);
                dtMain.Columns["選択"].SetOrdinal(0);
                dtMain.Columns["選択"].Caption = " ";
                foreach (DataRow row in dtMain.Rows)
                {
                    row["選択"] = true;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return ret;
        }

        #endregion
    }
}
