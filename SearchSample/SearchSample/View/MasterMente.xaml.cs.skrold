using NLog;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace MRILossTool.View
{
    /// <summary>
    /// MasterMente.xaml の相互作用ロジック
    /// </summary>
    public partial class MasterMente : MahApps.Metro.Controls.MetroWindow
    {
        private static Logger logger = LogManager.GetCurrentClassLogger();

        /// <summary>
        /// マスタメンテナンスメニュー
        /// </summary>
        public MasterMente()
        {
            InitializeComponent();

            // WPF版：テーマ設定
            Common.SettingTheme(this);
        }

        /// <summary>
        /// 会社マスタ　ボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnCompany_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                logger.Info(btnCompany.Content + "押下");

                var dlg = new CompanyMaster();
                dlg.Owner = this;
                dlg.ShowDialog();
            }
            catch (Exception ex)
            {
                logger.Error(ex);
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// 工場マスタ　ボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnFactory_Click(object sender, EventArgs e)
        {
            try
            {
                logger.Info(btnFactory.Content + "押下");

                var dlg = new FactoryMaster();
                dlg.Owner = this;
                dlg.ShowDialog();
            }
            catch (Exception ex)
            {
                logger.Error(ex);
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// 取込定義　ボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnSettingIn_Click(object sender, EventArgs e)
        {
            try
            {
                logger.Info(btnSettingIn.Content + "押下");

                var dlg = new SettingInMaster();
                dlg.Owner = this;
                dlg.ShowDialog();
            }
            catch (Exception ex)
            {
                logger.Error(ex);
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// ロス変換定義　ボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnLossReplace_Click(object sender, EventArgs e)
        {
            try
            {
                logger.Info(btnLossReplace.Content + "押下");

                var dlg = new LossReplaceMaster();
                dlg.Owner = this;
                dlg.ShowDialog();
            }
            catch (Exception ex)
            {
                logger.Error(ex);
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// 共通化定義　ボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnCommon_Click(object sender, EventArgs e)
        {
            try
            {
                logger.Info(btnCommon.Content + "押下");

                var dlg = new CommonMaster();
                dlg.Owner = this;
                dlg.ShowDialog();
            }
            catch (Exception ex)
            {
                logger.Error(ex);
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// 閉じる　ボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnClose_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                DialogResult = true;
            }
            catch (Exception ex)
            {
                logger.Error(ex);
                MessageBox.Show(ex.Message);
            }
        }
    }
}
